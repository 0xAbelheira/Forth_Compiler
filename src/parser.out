Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ELSE
    EMIT
    FUNC_END
    FUNC_START
    LOOP
    STRING

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> <empty>
Rule 3     Comando -> Expressao
Rule 4     Comando -> Imprime
Rule 5     Comando -> Comment
Rule 6     Comando -> Store
Rule 7     Comando -> Variavel
Rule 8     Comando -> Conditional
Rule 9     Expressao -> Expressao +
Rule 10    Expressao -> Expressao -
Rule 11    Expressao -> Expressao *
Rule 12    Expressao -> Expressao /
Rule 13    Expressao -> Expressao %
Rule 14    Expressao -> Termo
Rule 15    Termo -> NUMBER
Rule 16    Termo -> Unstore
Rule 17    Imprime -> Expressao DOT
Rule 18    Imprime -> DOTSTRING
Rule 19    Comment -> COMMENT_START Comandos COMMENT_END
Rule 20    Store -> ID !
Rule 21    Unstore -> ID @
Rule 22    Variavel -> VARIABLE ID
Rule 23    Conditional -> = IF Comandos THEN
Rule 24    Conditional -> < IF Comandos THEN
Rule 25    Conditional -> > IF Comandos THEN
Rule 26    Conditional -> LEQUAL IF Comandos THEN
Rule 27    Conditional -> GEQUAL IF Comandos THEN

Terminals, with rules where they appear

!                    : 20
%                    : 13
*                    : 11
+                    : 9
-                    : 10
/                    : 12
<                    : 24
=                    : 23
>                    : 25
@                    : 21
COMMENT_END          : 19
COMMENT_START        : 19
DO                   : 
DOT                  : 17
DOTSTRING            : 18
ELSE                 : 
EMIT                 : 
FUNC_END             : 
FUNC_START           : 
GEQUAL               : 27
ID                   : 20 21 22
IF                   : 23 24 25 26 27
LEQUAL               : 26
LOOP                 : 
NUMBER               : 15
STRING               : 
THEN                 : 23 24 25 26 27
VARIABLE             : 22
error                : 

Nonterminals, with rules where they appear

Comando              : 1
Comandos             : 1 19 23 24 25 26 27 0
Comment              : 5
Conditional          : 8
Expressao            : 3 9 10 11 12 13 17
Imprime              : 4
Store                : 6
Termo                : 14
Unstore              : 16
Variavel             : 7

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)
    $end            reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 1

state 1

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 2

    (1) Comandos -> Comandos Comando .

    DOTSTRING       reduce using rule 1 (Comandos -> Comandos Comando .)
    COMMENT_START   reduce using rule 1 (Comandos -> Comandos Comando .)
    ID              reduce using rule 1 (Comandos -> Comandos Comando .)
    VARIABLE        reduce using rule 1 (Comandos -> Comandos Comando .)
    =               reduce using rule 1 (Comandos -> Comandos Comando .)
    <               reduce using rule 1 (Comandos -> Comandos Comando .)
    >               reduce using rule 1 (Comandos -> Comandos Comando .)
    LEQUAL          reduce using rule 1 (Comandos -> Comandos Comando .)
    GEQUAL          reduce using rule 1 (Comandos -> Comandos Comando .)
    NUMBER          reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    COMMENT_END     reduce using rule 1 (Comandos -> Comandos Comando .)
    THEN            reduce using rule 1 (Comandos -> Comandos Comando .)


state 3

    (3) Comando -> Expressao .
    (9) Expressao -> Expressao . +
    (10) Expressao -> Expressao . -
    (11) Expressao -> Expressao . *
    (12) Expressao -> Expressao . /
    (13) Expressao -> Expressao . %
    (17) Imprime -> Expressao . DOT

    DOTSTRING       reduce using rule 3 (Comando -> Expressao .)
    COMMENT_START   reduce using rule 3 (Comando -> Expressao .)
    ID              reduce using rule 3 (Comando -> Expressao .)
    VARIABLE        reduce using rule 3 (Comando -> Expressao .)
    =               reduce using rule 3 (Comando -> Expressao .)
    <               reduce using rule 3 (Comando -> Expressao .)
    >               reduce using rule 3 (Comando -> Expressao .)
    LEQUAL          reduce using rule 3 (Comando -> Expressao .)
    GEQUAL          reduce using rule 3 (Comando -> Expressao .)
    NUMBER          reduce using rule 3 (Comando -> Expressao .)
    $end            reduce using rule 3 (Comando -> Expressao .)
    COMMENT_END     reduce using rule 3 (Comando -> Expressao .)
    THEN            reduce using rule 3 (Comando -> Expressao .)
    +               shift and go to state 21
    -               shift and go to state 22
    *               shift and go to state 23
    /               shift and go to state 24
    %               shift and go to state 25
    DOT             shift and go to state 26


state 4

    (4) Comando -> Imprime .

    DOTSTRING       reduce using rule 4 (Comando -> Imprime .)
    COMMENT_START   reduce using rule 4 (Comando -> Imprime .)
    ID              reduce using rule 4 (Comando -> Imprime .)
    VARIABLE        reduce using rule 4 (Comando -> Imprime .)
    =               reduce using rule 4 (Comando -> Imprime .)
    <               reduce using rule 4 (Comando -> Imprime .)
    >               reduce using rule 4 (Comando -> Imprime .)
    LEQUAL          reduce using rule 4 (Comando -> Imprime .)
    GEQUAL          reduce using rule 4 (Comando -> Imprime .)
    NUMBER          reduce using rule 4 (Comando -> Imprime .)
    $end            reduce using rule 4 (Comando -> Imprime .)
    COMMENT_END     reduce using rule 4 (Comando -> Imprime .)
    THEN            reduce using rule 4 (Comando -> Imprime .)


state 5

    (5) Comando -> Comment .

    DOTSTRING       reduce using rule 5 (Comando -> Comment .)
    COMMENT_START   reduce using rule 5 (Comando -> Comment .)
    ID              reduce using rule 5 (Comando -> Comment .)
    VARIABLE        reduce using rule 5 (Comando -> Comment .)
    =               reduce using rule 5 (Comando -> Comment .)
    <               reduce using rule 5 (Comando -> Comment .)
    >               reduce using rule 5 (Comando -> Comment .)
    LEQUAL          reduce using rule 5 (Comando -> Comment .)
    GEQUAL          reduce using rule 5 (Comando -> Comment .)
    NUMBER          reduce using rule 5 (Comando -> Comment .)
    $end            reduce using rule 5 (Comando -> Comment .)
    COMMENT_END     reduce using rule 5 (Comando -> Comment .)
    THEN            reduce using rule 5 (Comando -> Comment .)


state 6

    (6) Comando -> Store .

    DOTSTRING       reduce using rule 6 (Comando -> Store .)
    COMMENT_START   reduce using rule 6 (Comando -> Store .)
    ID              reduce using rule 6 (Comando -> Store .)
    VARIABLE        reduce using rule 6 (Comando -> Store .)
    =               reduce using rule 6 (Comando -> Store .)
    <               reduce using rule 6 (Comando -> Store .)
    >               reduce using rule 6 (Comando -> Store .)
    LEQUAL          reduce using rule 6 (Comando -> Store .)
    GEQUAL          reduce using rule 6 (Comando -> Store .)
    NUMBER          reduce using rule 6 (Comando -> Store .)
    $end            reduce using rule 6 (Comando -> Store .)
    COMMENT_END     reduce using rule 6 (Comando -> Store .)
    THEN            reduce using rule 6 (Comando -> Store .)


state 7

    (7) Comando -> Variavel .

    DOTSTRING       reduce using rule 7 (Comando -> Variavel .)
    COMMENT_START   reduce using rule 7 (Comando -> Variavel .)
    ID              reduce using rule 7 (Comando -> Variavel .)
    VARIABLE        reduce using rule 7 (Comando -> Variavel .)
    =               reduce using rule 7 (Comando -> Variavel .)
    <               reduce using rule 7 (Comando -> Variavel .)
    >               reduce using rule 7 (Comando -> Variavel .)
    LEQUAL          reduce using rule 7 (Comando -> Variavel .)
    GEQUAL          reduce using rule 7 (Comando -> Variavel .)
    NUMBER          reduce using rule 7 (Comando -> Variavel .)
    $end            reduce using rule 7 (Comando -> Variavel .)
    COMMENT_END     reduce using rule 7 (Comando -> Variavel .)
    THEN            reduce using rule 7 (Comando -> Variavel .)


state 8

    (8) Comando -> Conditional .

    DOTSTRING       reduce using rule 8 (Comando -> Conditional .)
    COMMENT_START   reduce using rule 8 (Comando -> Conditional .)
    ID              reduce using rule 8 (Comando -> Conditional .)
    VARIABLE        reduce using rule 8 (Comando -> Conditional .)
    =               reduce using rule 8 (Comando -> Conditional .)
    <               reduce using rule 8 (Comando -> Conditional .)
    >               reduce using rule 8 (Comando -> Conditional .)
    LEQUAL          reduce using rule 8 (Comando -> Conditional .)
    GEQUAL          reduce using rule 8 (Comando -> Conditional .)
    NUMBER          reduce using rule 8 (Comando -> Conditional .)
    $end            reduce using rule 8 (Comando -> Conditional .)
    COMMENT_END     reduce using rule 8 (Comando -> Conditional .)
    THEN            reduce using rule 8 (Comando -> Conditional .)


state 9

    (14) Expressao -> Termo .

    +               reduce using rule 14 (Expressao -> Termo .)
    -               reduce using rule 14 (Expressao -> Termo .)
    *               reduce using rule 14 (Expressao -> Termo .)
    /               reduce using rule 14 (Expressao -> Termo .)
    %               reduce using rule 14 (Expressao -> Termo .)
    DOT             reduce using rule 14 (Expressao -> Termo .)
    DOTSTRING       reduce using rule 14 (Expressao -> Termo .)
    COMMENT_START   reduce using rule 14 (Expressao -> Termo .)
    ID              reduce using rule 14 (Expressao -> Termo .)
    VARIABLE        reduce using rule 14 (Expressao -> Termo .)
    =               reduce using rule 14 (Expressao -> Termo .)
    <               reduce using rule 14 (Expressao -> Termo .)
    >               reduce using rule 14 (Expressao -> Termo .)
    LEQUAL          reduce using rule 14 (Expressao -> Termo .)
    GEQUAL          reduce using rule 14 (Expressao -> Termo .)
    NUMBER          reduce using rule 14 (Expressao -> Termo .)
    $end            reduce using rule 14 (Expressao -> Termo .)
    COMMENT_END     reduce using rule 14 (Expressao -> Termo .)
    THEN            reduce using rule 14 (Expressao -> Termo .)


state 10

    (18) Imprime -> DOTSTRING .

    DOTSTRING       reduce using rule 18 (Imprime -> DOTSTRING .)
    COMMENT_START   reduce using rule 18 (Imprime -> DOTSTRING .)
    ID              reduce using rule 18 (Imprime -> DOTSTRING .)
    VARIABLE        reduce using rule 18 (Imprime -> DOTSTRING .)
    =               reduce using rule 18 (Imprime -> DOTSTRING .)
    <               reduce using rule 18 (Imprime -> DOTSTRING .)
    >               reduce using rule 18 (Imprime -> DOTSTRING .)
    LEQUAL          reduce using rule 18 (Imprime -> DOTSTRING .)
    GEQUAL          reduce using rule 18 (Imprime -> DOTSTRING .)
    NUMBER          reduce using rule 18 (Imprime -> DOTSTRING .)
    $end            reduce using rule 18 (Imprime -> DOTSTRING .)
    COMMENT_END     reduce using rule 18 (Imprime -> DOTSTRING .)
    THEN            reduce using rule 18 (Imprime -> DOTSTRING .)


state 11

    (19) Comment -> COMMENT_START . Comandos COMMENT_END
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    COMMENT_END     reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 27

state 12

    (20) Store -> ID . !
    (21) Unstore -> ID . @

    !               shift and go to state 28
    @               shift and go to state 29


state 13

    (22) Variavel -> VARIABLE . ID

    ID              shift and go to state 30


state 14

    (23) Conditional -> = . IF Comandos THEN

    IF              shift and go to state 31


state 15

    (24) Conditional -> < . IF Comandos THEN

    IF              shift and go to state 32


state 16

    (25) Conditional -> > . IF Comandos THEN

    IF              shift and go to state 33


state 17

    (26) Conditional -> LEQUAL . IF Comandos THEN

    IF              shift and go to state 34


state 18

    (27) Conditional -> GEQUAL . IF Comandos THEN

    IF              shift and go to state 35


state 19

    (15) Termo -> NUMBER .

    +               reduce using rule 15 (Termo -> NUMBER .)
    -               reduce using rule 15 (Termo -> NUMBER .)
    *               reduce using rule 15 (Termo -> NUMBER .)
    /               reduce using rule 15 (Termo -> NUMBER .)
    %               reduce using rule 15 (Termo -> NUMBER .)
    DOT             reduce using rule 15 (Termo -> NUMBER .)
    DOTSTRING       reduce using rule 15 (Termo -> NUMBER .)
    COMMENT_START   reduce using rule 15 (Termo -> NUMBER .)
    ID              reduce using rule 15 (Termo -> NUMBER .)
    VARIABLE        reduce using rule 15 (Termo -> NUMBER .)
    =               reduce using rule 15 (Termo -> NUMBER .)
    <               reduce using rule 15 (Termo -> NUMBER .)
    >               reduce using rule 15 (Termo -> NUMBER .)
    LEQUAL          reduce using rule 15 (Termo -> NUMBER .)
    GEQUAL          reduce using rule 15 (Termo -> NUMBER .)
    NUMBER          reduce using rule 15 (Termo -> NUMBER .)
    $end            reduce using rule 15 (Termo -> NUMBER .)
    COMMENT_END     reduce using rule 15 (Termo -> NUMBER .)
    THEN            reduce using rule 15 (Termo -> NUMBER .)


state 20

    (16) Termo -> Unstore .

    +               reduce using rule 16 (Termo -> Unstore .)
    -               reduce using rule 16 (Termo -> Unstore .)
    *               reduce using rule 16 (Termo -> Unstore .)
    /               reduce using rule 16 (Termo -> Unstore .)
    %               reduce using rule 16 (Termo -> Unstore .)
    DOT             reduce using rule 16 (Termo -> Unstore .)
    DOTSTRING       reduce using rule 16 (Termo -> Unstore .)
    COMMENT_START   reduce using rule 16 (Termo -> Unstore .)
    ID              reduce using rule 16 (Termo -> Unstore .)
    VARIABLE        reduce using rule 16 (Termo -> Unstore .)
    =               reduce using rule 16 (Termo -> Unstore .)
    <               reduce using rule 16 (Termo -> Unstore .)
    >               reduce using rule 16 (Termo -> Unstore .)
    LEQUAL          reduce using rule 16 (Termo -> Unstore .)
    GEQUAL          reduce using rule 16 (Termo -> Unstore .)
    NUMBER          reduce using rule 16 (Termo -> Unstore .)
    $end            reduce using rule 16 (Termo -> Unstore .)
    COMMENT_END     reduce using rule 16 (Termo -> Unstore .)
    THEN            reduce using rule 16 (Termo -> Unstore .)


state 21

    (9) Expressao -> Expressao + .

    +               reduce using rule 9 (Expressao -> Expressao + .)
    -               reduce using rule 9 (Expressao -> Expressao + .)
    *               reduce using rule 9 (Expressao -> Expressao + .)
    /               reduce using rule 9 (Expressao -> Expressao + .)
    %               reduce using rule 9 (Expressao -> Expressao + .)
    DOT             reduce using rule 9 (Expressao -> Expressao + .)
    DOTSTRING       reduce using rule 9 (Expressao -> Expressao + .)
    COMMENT_START   reduce using rule 9 (Expressao -> Expressao + .)
    ID              reduce using rule 9 (Expressao -> Expressao + .)
    VARIABLE        reduce using rule 9 (Expressao -> Expressao + .)
    =               reduce using rule 9 (Expressao -> Expressao + .)
    <               reduce using rule 9 (Expressao -> Expressao + .)
    >               reduce using rule 9 (Expressao -> Expressao + .)
    LEQUAL          reduce using rule 9 (Expressao -> Expressao + .)
    GEQUAL          reduce using rule 9 (Expressao -> Expressao + .)
    NUMBER          reduce using rule 9 (Expressao -> Expressao + .)
    $end            reduce using rule 9 (Expressao -> Expressao + .)
    COMMENT_END     reduce using rule 9 (Expressao -> Expressao + .)
    THEN            reduce using rule 9 (Expressao -> Expressao + .)


state 22

    (10) Expressao -> Expressao - .

    +               reduce using rule 10 (Expressao -> Expressao - .)
    -               reduce using rule 10 (Expressao -> Expressao - .)
    *               reduce using rule 10 (Expressao -> Expressao - .)
    /               reduce using rule 10 (Expressao -> Expressao - .)
    %               reduce using rule 10 (Expressao -> Expressao - .)
    DOT             reduce using rule 10 (Expressao -> Expressao - .)
    DOTSTRING       reduce using rule 10 (Expressao -> Expressao - .)
    COMMENT_START   reduce using rule 10 (Expressao -> Expressao - .)
    ID              reduce using rule 10 (Expressao -> Expressao - .)
    VARIABLE        reduce using rule 10 (Expressao -> Expressao - .)
    =               reduce using rule 10 (Expressao -> Expressao - .)
    <               reduce using rule 10 (Expressao -> Expressao - .)
    >               reduce using rule 10 (Expressao -> Expressao - .)
    LEQUAL          reduce using rule 10 (Expressao -> Expressao - .)
    GEQUAL          reduce using rule 10 (Expressao -> Expressao - .)
    NUMBER          reduce using rule 10 (Expressao -> Expressao - .)
    $end            reduce using rule 10 (Expressao -> Expressao - .)
    COMMENT_END     reduce using rule 10 (Expressao -> Expressao - .)
    THEN            reduce using rule 10 (Expressao -> Expressao - .)


state 23

    (11) Expressao -> Expressao * .

    +               reduce using rule 11 (Expressao -> Expressao * .)
    -               reduce using rule 11 (Expressao -> Expressao * .)
    *               reduce using rule 11 (Expressao -> Expressao * .)
    /               reduce using rule 11 (Expressao -> Expressao * .)
    %               reduce using rule 11 (Expressao -> Expressao * .)
    DOT             reduce using rule 11 (Expressao -> Expressao * .)
    DOTSTRING       reduce using rule 11 (Expressao -> Expressao * .)
    COMMENT_START   reduce using rule 11 (Expressao -> Expressao * .)
    ID              reduce using rule 11 (Expressao -> Expressao * .)
    VARIABLE        reduce using rule 11 (Expressao -> Expressao * .)
    =               reduce using rule 11 (Expressao -> Expressao * .)
    <               reduce using rule 11 (Expressao -> Expressao * .)
    >               reduce using rule 11 (Expressao -> Expressao * .)
    LEQUAL          reduce using rule 11 (Expressao -> Expressao * .)
    GEQUAL          reduce using rule 11 (Expressao -> Expressao * .)
    NUMBER          reduce using rule 11 (Expressao -> Expressao * .)
    $end            reduce using rule 11 (Expressao -> Expressao * .)
    COMMENT_END     reduce using rule 11 (Expressao -> Expressao * .)
    THEN            reduce using rule 11 (Expressao -> Expressao * .)


state 24

    (12) Expressao -> Expressao / .

    +               reduce using rule 12 (Expressao -> Expressao / .)
    -               reduce using rule 12 (Expressao -> Expressao / .)
    *               reduce using rule 12 (Expressao -> Expressao / .)
    /               reduce using rule 12 (Expressao -> Expressao / .)
    %               reduce using rule 12 (Expressao -> Expressao / .)
    DOT             reduce using rule 12 (Expressao -> Expressao / .)
    DOTSTRING       reduce using rule 12 (Expressao -> Expressao / .)
    COMMENT_START   reduce using rule 12 (Expressao -> Expressao / .)
    ID              reduce using rule 12 (Expressao -> Expressao / .)
    VARIABLE        reduce using rule 12 (Expressao -> Expressao / .)
    =               reduce using rule 12 (Expressao -> Expressao / .)
    <               reduce using rule 12 (Expressao -> Expressao / .)
    >               reduce using rule 12 (Expressao -> Expressao / .)
    LEQUAL          reduce using rule 12 (Expressao -> Expressao / .)
    GEQUAL          reduce using rule 12 (Expressao -> Expressao / .)
    NUMBER          reduce using rule 12 (Expressao -> Expressao / .)
    $end            reduce using rule 12 (Expressao -> Expressao / .)
    COMMENT_END     reduce using rule 12 (Expressao -> Expressao / .)
    THEN            reduce using rule 12 (Expressao -> Expressao / .)


state 25

    (13) Expressao -> Expressao % .

    +               reduce using rule 13 (Expressao -> Expressao % .)
    -               reduce using rule 13 (Expressao -> Expressao % .)
    *               reduce using rule 13 (Expressao -> Expressao % .)
    /               reduce using rule 13 (Expressao -> Expressao % .)
    %               reduce using rule 13 (Expressao -> Expressao % .)
    DOT             reduce using rule 13 (Expressao -> Expressao % .)
    DOTSTRING       reduce using rule 13 (Expressao -> Expressao % .)
    COMMENT_START   reduce using rule 13 (Expressao -> Expressao % .)
    ID              reduce using rule 13 (Expressao -> Expressao % .)
    VARIABLE        reduce using rule 13 (Expressao -> Expressao % .)
    =               reduce using rule 13 (Expressao -> Expressao % .)
    <               reduce using rule 13 (Expressao -> Expressao % .)
    >               reduce using rule 13 (Expressao -> Expressao % .)
    LEQUAL          reduce using rule 13 (Expressao -> Expressao % .)
    GEQUAL          reduce using rule 13 (Expressao -> Expressao % .)
    NUMBER          reduce using rule 13 (Expressao -> Expressao % .)
    $end            reduce using rule 13 (Expressao -> Expressao % .)
    COMMENT_END     reduce using rule 13 (Expressao -> Expressao % .)
    THEN            reduce using rule 13 (Expressao -> Expressao % .)


state 26

    (17) Imprime -> Expressao DOT .

    DOTSTRING       reduce using rule 17 (Imprime -> Expressao DOT .)
    COMMENT_START   reduce using rule 17 (Imprime -> Expressao DOT .)
    ID              reduce using rule 17 (Imprime -> Expressao DOT .)
    VARIABLE        reduce using rule 17 (Imprime -> Expressao DOT .)
    =               reduce using rule 17 (Imprime -> Expressao DOT .)
    <               reduce using rule 17 (Imprime -> Expressao DOT .)
    >               reduce using rule 17 (Imprime -> Expressao DOT .)
    LEQUAL          reduce using rule 17 (Imprime -> Expressao DOT .)
    GEQUAL          reduce using rule 17 (Imprime -> Expressao DOT .)
    NUMBER          reduce using rule 17 (Imprime -> Expressao DOT .)
    $end            reduce using rule 17 (Imprime -> Expressao DOT .)
    COMMENT_END     reduce using rule 17 (Imprime -> Expressao DOT .)
    THEN            reduce using rule 17 (Imprime -> Expressao DOT .)


state 27

    (19) Comment -> COMMENT_START Comandos . COMMENT_END
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    COMMENT_END     shift and go to state 36
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 28

    (20) Store -> ID ! .

    DOTSTRING       reduce using rule 20 (Store -> ID ! .)
    COMMENT_START   reduce using rule 20 (Store -> ID ! .)
    ID              reduce using rule 20 (Store -> ID ! .)
    VARIABLE        reduce using rule 20 (Store -> ID ! .)
    =               reduce using rule 20 (Store -> ID ! .)
    <               reduce using rule 20 (Store -> ID ! .)
    >               reduce using rule 20 (Store -> ID ! .)
    LEQUAL          reduce using rule 20 (Store -> ID ! .)
    GEQUAL          reduce using rule 20 (Store -> ID ! .)
    NUMBER          reduce using rule 20 (Store -> ID ! .)
    $end            reduce using rule 20 (Store -> ID ! .)
    COMMENT_END     reduce using rule 20 (Store -> ID ! .)
    THEN            reduce using rule 20 (Store -> ID ! .)


state 29

    (21) Unstore -> ID @ .

    +               reduce using rule 21 (Unstore -> ID @ .)
    -               reduce using rule 21 (Unstore -> ID @ .)
    *               reduce using rule 21 (Unstore -> ID @ .)
    /               reduce using rule 21 (Unstore -> ID @ .)
    %               reduce using rule 21 (Unstore -> ID @ .)
    DOT             reduce using rule 21 (Unstore -> ID @ .)
    DOTSTRING       reduce using rule 21 (Unstore -> ID @ .)
    COMMENT_START   reduce using rule 21 (Unstore -> ID @ .)
    ID              reduce using rule 21 (Unstore -> ID @ .)
    VARIABLE        reduce using rule 21 (Unstore -> ID @ .)
    =               reduce using rule 21 (Unstore -> ID @ .)
    <               reduce using rule 21 (Unstore -> ID @ .)
    >               reduce using rule 21 (Unstore -> ID @ .)
    LEQUAL          reduce using rule 21 (Unstore -> ID @ .)
    GEQUAL          reduce using rule 21 (Unstore -> ID @ .)
    NUMBER          reduce using rule 21 (Unstore -> ID @ .)
    $end            reduce using rule 21 (Unstore -> ID @ .)
    COMMENT_END     reduce using rule 21 (Unstore -> ID @ .)
    THEN            reduce using rule 21 (Unstore -> ID @ .)


state 30

    (22) Variavel -> VARIABLE ID .

    DOTSTRING       reduce using rule 22 (Variavel -> VARIABLE ID .)
    COMMENT_START   reduce using rule 22 (Variavel -> VARIABLE ID .)
    ID              reduce using rule 22 (Variavel -> VARIABLE ID .)
    VARIABLE        reduce using rule 22 (Variavel -> VARIABLE ID .)
    =               reduce using rule 22 (Variavel -> VARIABLE ID .)
    <               reduce using rule 22 (Variavel -> VARIABLE ID .)
    >               reduce using rule 22 (Variavel -> VARIABLE ID .)
    LEQUAL          reduce using rule 22 (Variavel -> VARIABLE ID .)
    GEQUAL          reduce using rule 22 (Variavel -> VARIABLE ID .)
    NUMBER          reduce using rule 22 (Variavel -> VARIABLE ID .)
    $end            reduce using rule 22 (Variavel -> VARIABLE ID .)
    COMMENT_END     reduce using rule 22 (Variavel -> VARIABLE ID .)
    THEN            reduce using rule 22 (Variavel -> VARIABLE ID .)


state 31

    (23) Conditional -> = IF . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 37

state 32

    (24) Conditional -> < IF . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 38

state 33

    (25) Conditional -> > IF . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 39

state 34

    (26) Conditional -> LEQUAL IF . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 40

state 35

    (27) Conditional -> GEQUAL IF . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    LEQUAL          reduce using rule 2 (Comandos -> .)
    GEQUAL          reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 41

state 36

    (19) Comment -> COMMENT_START Comandos COMMENT_END .

    DOTSTRING       reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    COMMENT_START   reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    ID              reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    VARIABLE        reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    =               reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    <               reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    >               reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    LEQUAL          reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    GEQUAL          reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    NUMBER          reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    $end            reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    COMMENT_END     reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)
    THEN            reduce using rule 19 (Comment -> COMMENT_START Comandos COMMENT_END .)


state 37

    (23) Conditional -> = IF Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    THEN            shift and go to state 42
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 38

    (24) Conditional -> < IF Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    THEN            shift and go to state 43
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 39

    (25) Conditional -> > IF Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    THEN            shift and go to state 44
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 40

    (26) Conditional -> LEQUAL IF Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    THEN            shift and go to state 45
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 41

    (27) Conditional -> GEQUAL IF Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Expressao -> . Expressao +
    (10) Expressao -> . Expressao -
    (11) Expressao -> . Expressao *
    (12) Expressao -> . Expressao /
    (13) Expressao -> . Expressao %
    (14) Expressao -> . Termo
    (17) Imprime -> . Expressao DOT
    (18) Imprime -> . DOTSTRING
    (19) Comment -> . COMMENT_START Comandos COMMENT_END
    (20) Store -> . ID !
    (22) Variavel -> . VARIABLE ID
    (23) Conditional -> . = IF Comandos THEN
    (24) Conditional -> . < IF Comandos THEN
    (25) Conditional -> . > IF Comandos THEN
    (26) Conditional -> . LEQUAL IF Comandos THEN
    (27) Conditional -> . GEQUAL IF Comandos THEN
    (15) Termo -> . NUMBER
    (16) Termo -> . Unstore
    (21) Unstore -> . ID @

    THEN            shift and go to state 46
    DOTSTRING       shift and go to state 10
    COMMENT_START   shift and go to state 11
    ID              shift and go to state 12
    VARIABLE        shift and go to state 13
    =               shift and go to state 14
    <               shift and go to state 15
    >               shift and go to state 16
    LEQUAL          shift and go to state 17
    GEQUAL          shift and go to state 18
    NUMBER          shift and go to state 19

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Termo                          shift and go to state 9
    Unstore                        shift and go to state 20

state 42

    (23) Conditional -> = IF Comandos THEN .

    DOTSTRING       reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    COMMENT_START   reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    ID              reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    VARIABLE        reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    =               reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    <               reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    >               reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    LEQUAL          reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    GEQUAL          reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    NUMBER          reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    $end            reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    COMMENT_END     reduce using rule 23 (Conditional -> = IF Comandos THEN .)
    THEN            reduce using rule 23 (Conditional -> = IF Comandos THEN .)


state 43

    (24) Conditional -> < IF Comandos THEN .

    DOTSTRING       reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    COMMENT_START   reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    ID              reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    VARIABLE        reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    =               reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    <               reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    >               reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    LEQUAL          reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    GEQUAL          reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    NUMBER          reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    $end            reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    COMMENT_END     reduce using rule 24 (Conditional -> < IF Comandos THEN .)
    THEN            reduce using rule 24 (Conditional -> < IF Comandos THEN .)


state 44

    (25) Conditional -> > IF Comandos THEN .

    DOTSTRING       reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    COMMENT_START   reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    ID              reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    VARIABLE        reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    =               reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    <               reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    >               reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    LEQUAL          reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    GEQUAL          reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    NUMBER          reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    $end            reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    COMMENT_END     reduce using rule 25 (Conditional -> > IF Comandos THEN .)
    THEN            reduce using rule 25 (Conditional -> > IF Comandos THEN .)


state 45

    (26) Conditional -> LEQUAL IF Comandos THEN .

    DOTSTRING       reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    COMMENT_START   reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    ID              reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    VARIABLE        reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    =               reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    <               reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    >               reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    LEQUAL          reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    GEQUAL          reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    NUMBER          reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    $end            reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    COMMENT_END     reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)
    THEN            reduce using rule 26 (Conditional -> LEQUAL IF Comandos THEN .)


state 46

    (27) Conditional -> GEQUAL IF Comandos THEN .

    DOTSTRING       reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    COMMENT_START   reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    ID              reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    VARIABLE        reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    =               reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    <               reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    >               reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    LEQUAL          reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    GEQUAL          reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    NUMBER          reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    $end            reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    COMMENT_END     reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)
    THEN            reduce using rule 27 (Conditional -> GEQUAL IF Comandos THEN .)

