Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMIT
    FUNC_END
    FUNC_START
    NUMBERF
    STRING

Grammar

Rule 0     S' -> Comandos
Rule 1     Comandos -> Comandos Comando
Rule 2     Comandos -> <empty>
Rule 3     Comando -> Expressao
Rule 4     Comando -> Imprime
Rule 5     Comando -> Comment
Rule 6     Comando -> Store
Rule 7     Comando -> Variavel
Rule 8     Comando -> Conditional
Rule 9     Comando -> Loop
Rule 10    Expressao -> Expressao +
Rule 11    Expressao -> Expressao -
Rule 12    Expressao -> Expressao *
Rule 13    Expressao -> Expressao /
Rule 14    Expressao -> Expressao %
Rule 15    Expressao -> Termo
Rule 16    Termo -> NUMBER
Rule 17    Termo -> Unstore
Rule 18    Imprime -> DOT
Rule 19    Imprime -> DOTSTRING
Rule 20    Comment -> COMMENT_START Comandos COMMENT_END
Rule 21    Store -> ID !
Rule 22    Unstore -> ID @
Rule 23    Variavel -> VARIABLE ID
Rule 24    Conditional -> = IF Comandos THEN
Rule 25    Conditional -> < IF Comandos THEN
Rule 26    Conditional -> > IF Comandos THEN
Rule 27    Conditional -> INFEQ IF Comandos THEN
Rule 28    Conditional -> SUPEQ IF Comandos THEN
Rule 29    Conditional -> = IF Comandos ELSE Comandos THEN
Rule 30    Conditional -> < IF Comandos ELSE Comandos THEN
Rule 31    Conditional -> > IF Comandos ELSE Comandos THEN
Rule 32    Conditional -> INFEQ IF Comandos ELSE Comandos THEN
Rule 33    Conditional -> SUPEQ IF Comandos ELSE Comandos THEN
Rule 34    Conditional -> Expressao IF Comandos THEN
Rule 35    Conditional -> Expressao IF Comandos ELSE Comandos THEN
Rule 36    Loop -> Expressao DO Comandos LOOP

Terminals, with rules where they appear

!                    : 21
%                    : 14
*                    : 12
+                    : 10
-                    : 11
/                    : 13
<                    : 25 30
=                    : 24 29
>                    : 26 31
@                    : 22
COMMENT_END          : 20
COMMENT_START        : 20
DO                   : 36
DOT                  : 18
DOTSTRING            : 19
ELSE                 : 29 30 31 32 33 35
EMIT                 : 
FUNC_END             : 
FUNC_START           : 
ID                   : 21 22 23
IF                   : 24 25 26 27 28 29 30 31 32 33 34 35
INFEQ                : 27 32
LOOP                 : 36
NUMBER               : 16
NUMBERF              : 
STRING               : 
SUPEQ                : 28 33
THEN                 : 24 25 26 27 28 29 30 31 32 33 34 35
VARIABLE             : 23
error                : 

Nonterminals, with rules where they appear

Comando              : 1
Comandos             : 1 20 24 25 26 27 28 29 29 30 30 31 31 32 32 33 33 34 35 35 36 0
Comment              : 5
Conditional          : 8
Expressao            : 3 10 11 12 13 14 34 35 36
Imprime              : 4
Loop                 : 9
Store                : 6
Termo                : 15
Unstore              : 17
Variavel             : 7

Parsing method: LALR

state 0

    (0) S' -> . Comandos
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)
    $end            reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 1

state 1

    (0) S' -> Comandos .
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 2

    (1) Comandos -> Comandos Comando .

    DOT             reduce using rule 1 (Comandos -> Comandos Comando .)
    DOTSTRING       reduce using rule 1 (Comandos -> Comandos Comando .)
    COMMENT_START   reduce using rule 1 (Comandos -> Comandos Comando .)
    ID              reduce using rule 1 (Comandos -> Comandos Comando .)
    VARIABLE        reduce using rule 1 (Comandos -> Comandos Comando .)
    =               reduce using rule 1 (Comandos -> Comandos Comando .)
    <               reduce using rule 1 (Comandos -> Comandos Comando .)
    >               reduce using rule 1 (Comandos -> Comandos Comando .)
    INFEQ           reduce using rule 1 (Comandos -> Comandos Comando .)
    SUPEQ           reduce using rule 1 (Comandos -> Comandos Comando .)
    NUMBER          reduce using rule 1 (Comandos -> Comandos Comando .)
    $end            reduce using rule 1 (Comandos -> Comandos Comando .)
    COMMENT_END     reduce using rule 1 (Comandos -> Comandos Comando .)
    THEN            reduce using rule 1 (Comandos -> Comandos Comando .)
    ELSE            reduce using rule 1 (Comandos -> Comandos Comando .)
    LOOP            reduce using rule 1 (Comandos -> Comandos Comando .)


state 3

    (3) Comando -> Expressao .
    (10) Expressao -> Expressao . +
    (11) Expressao -> Expressao . -
    (12) Expressao -> Expressao . *
    (13) Expressao -> Expressao . /
    (14) Expressao -> Expressao . %
    (34) Conditional -> Expressao . IF Comandos THEN
    (35) Conditional -> Expressao . IF Comandos ELSE Comandos THEN
    (36) Loop -> Expressao . DO Comandos LOOP

    DOT             reduce using rule 3 (Comando -> Expressao .)
    DOTSTRING       reduce using rule 3 (Comando -> Expressao .)
    COMMENT_START   reduce using rule 3 (Comando -> Expressao .)
    ID              reduce using rule 3 (Comando -> Expressao .)
    VARIABLE        reduce using rule 3 (Comando -> Expressao .)
    =               reduce using rule 3 (Comando -> Expressao .)
    <               reduce using rule 3 (Comando -> Expressao .)
    >               reduce using rule 3 (Comando -> Expressao .)
    INFEQ           reduce using rule 3 (Comando -> Expressao .)
    SUPEQ           reduce using rule 3 (Comando -> Expressao .)
    NUMBER          reduce using rule 3 (Comando -> Expressao .)
    $end            reduce using rule 3 (Comando -> Expressao .)
    COMMENT_END     reduce using rule 3 (Comando -> Expressao .)
    THEN            reduce using rule 3 (Comando -> Expressao .)
    ELSE            reduce using rule 3 (Comando -> Expressao .)
    LOOP            reduce using rule 3 (Comando -> Expressao .)
    +               shift and go to state 23
    -               shift and go to state 24
    *               shift and go to state 25
    /               shift and go to state 26
    %               shift and go to state 27
    IF              shift and go to state 28
    DO              shift and go to state 29


state 4

    (4) Comando -> Imprime .

    DOT             reduce using rule 4 (Comando -> Imprime .)
    DOTSTRING       reduce using rule 4 (Comando -> Imprime .)
    COMMENT_START   reduce using rule 4 (Comando -> Imprime .)
    ID              reduce using rule 4 (Comando -> Imprime .)
    VARIABLE        reduce using rule 4 (Comando -> Imprime .)
    =               reduce using rule 4 (Comando -> Imprime .)
    <               reduce using rule 4 (Comando -> Imprime .)
    >               reduce using rule 4 (Comando -> Imprime .)
    INFEQ           reduce using rule 4 (Comando -> Imprime .)
    SUPEQ           reduce using rule 4 (Comando -> Imprime .)
    NUMBER          reduce using rule 4 (Comando -> Imprime .)
    $end            reduce using rule 4 (Comando -> Imprime .)
    COMMENT_END     reduce using rule 4 (Comando -> Imprime .)
    THEN            reduce using rule 4 (Comando -> Imprime .)
    ELSE            reduce using rule 4 (Comando -> Imprime .)
    LOOP            reduce using rule 4 (Comando -> Imprime .)


state 5

    (5) Comando -> Comment .

    DOT             reduce using rule 5 (Comando -> Comment .)
    DOTSTRING       reduce using rule 5 (Comando -> Comment .)
    COMMENT_START   reduce using rule 5 (Comando -> Comment .)
    ID              reduce using rule 5 (Comando -> Comment .)
    VARIABLE        reduce using rule 5 (Comando -> Comment .)
    =               reduce using rule 5 (Comando -> Comment .)
    <               reduce using rule 5 (Comando -> Comment .)
    >               reduce using rule 5 (Comando -> Comment .)
    INFEQ           reduce using rule 5 (Comando -> Comment .)
    SUPEQ           reduce using rule 5 (Comando -> Comment .)
    NUMBER          reduce using rule 5 (Comando -> Comment .)
    $end            reduce using rule 5 (Comando -> Comment .)
    COMMENT_END     reduce using rule 5 (Comando -> Comment .)
    THEN            reduce using rule 5 (Comando -> Comment .)
    ELSE            reduce using rule 5 (Comando -> Comment .)
    LOOP            reduce using rule 5 (Comando -> Comment .)


state 6

    (6) Comando -> Store .

    DOT             reduce using rule 6 (Comando -> Store .)
    DOTSTRING       reduce using rule 6 (Comando -> Store .)
    COMMENT_START   reduce using rule 6 (Comando -> Store .)
    ID              reduce using rule 6 (Comando -> Store .)
    VARIABLE        reduce using rule 6 (Comando -> Store .)
    =               reduce using rule 6 (Comando -> Store .)
    <               reduce using rule 6 (Comando -> Store .)
    >               reduce using rule 6 (Comando -> Store .)
    INFEQ           reduce using rule 6 (Comando -> Store .)
    SUPEQ           reduce using rule 6 (Comando -> Store .)
    NUMBER          reduce using rule 6 (Comando -> Store .)
    $end            reduce using rule 6 (Comando -> Store .)
    COMMENT_END     reduce using rule 6 (Comando -> Store .)
    THEN            reduce using rule 6 (Comando -> Store .)
    ELSE            reduce using rule 6 (Comando -> Store .)
    LOOP            reduce using rule 6 (Comando -> Store .)


state 7

    (7) Comando -> Variavel .

    DOT             reduce using rule 7 (Comando -> Variavel .)
    DOTSTRING       reduce using rule 7 (Comando -> Variavel .)
    COMMENT_START   reduce using rule 7 (Comando -> Variavel .)
    ID              reduce using rule 7 (Comando -> Variavel .)
    VARIABLE        reduce using rule 7 (Comando -> Variavel .)
    =               reduce using rule 7 (Comando -> Variavel .)
    <               reduce using rule 7 (Comando -> Variavel .)
    >               reduce using rule 7 (Comando -> Variavel .)
    INFEQ           reduce using rule 7 (Comando -> Variavel .)
    SUPEQ           reduce using rule 7 (Comando -> Variavel .)
    NUMBER          reduce using rule 7 (Comando -> Variavel .)
    $end            reduce using rule 7 (Comando -> Variavel .)
    COMMENT_END     reduce using rule 7 (Comando -> Variavel .)
    THEN            reduce using rule 7 (Comando -> Variavel .)
    ELSE            reduce using rule 7 (Comando -> Variavel .)
    LOOP            reduce using rule 7 (Comando -> Variavel .)


state 8

    (8) Comando -> Conditional .

    DOT             reduce using rule 8 (Comando -> Conditional .)
    DOTSTRING       reduce using rule 8 (Comando -> Conditional .)
    COMMENT_START   reduce using rule 8 (Comando -> Conditional .)
    ID              reduce using rule 8 (Comando -> Conditional .)
    VARIABLE        reduce using rule 8 (Comando -> Conditional .)
    =               reduce using rule 8 (Comando -> Conditional .)
    <               reduce using rule 8 (Comando -> Conditional .)
    >               reduce using rule 8 (Comando -> Conditional .)
    INFEQ           reduce using rule 8 (Comando -> Conditional .)
    SUPEQ           reduce using rule 8 (Comando -> Conditional .)
    NUMBER          reduce using rule 8 (Comando -> Conditional .)
    $end            reduce using rule 8 (Comando -> Conditional .)
    COMMENT_END     reduce using rule 8 (Comando -> Conditional .)
    THEN            reduce using rule 8 (Comando -> Conditional .)
    ELSE            reduce using rule 8 (Comando -> Conditional .)
    LOOP            reduce using rule 8 (Comando -> Conditional .)


state 9

    (9) Comando -> Loop .

    DOT             reduce using rule 9 (Comando -> Loop .)
    DOTSTRING       reduce using rule 9 (Comando -> Loop .)
    COMMENT_START   reduce using rule 9 (Comando -> Loop .)
    ID              reduce using rule 9 (Comando -> Loop .)
    VARIABLE        reduce using rule 9 (Comando -> Loop .)
    =               reduce using rule 9 (Comando -> Loop .)
    <               reduce using rule 9 (Comando -> Loop .)
    >               reduce using rule 9 (Comando -> Loop .)
    INFEQ           reduce using rule 9 (Comando -> Loop .)
    SUPEQ           reduce using rule 9 (Comando -> Loop .)
    NUMBER          reduce using rule 9 (Comando -> Loop .)
    $end            reduce using rule 9 (Comando -> Loop .)
    COMMENT_END     reduce using rule 9 (Comando -> Loop .)
    THEN            reduce using rule 9 (Comando -> Loop .)
    ELSE            reduce using rule 9 (Comando -> Loop .)
    LOOP            reduce using rule 9 (Comando -> Loop .)


state 10

    (15) Expressao -> Termo .

    +               reduce using rule 15 (Expressao -> Termo .)
    -               reduce using rule 15 (Expressao -> Termo .)
    *               reduce using rule 15 (Expressao -> Termo .)
    /               reduce using rule 15 (Expressao -> Termo .)
    %               reduce using rule 15 (Expressao -> Termo .)
    IF              reduce using rule 15 (Expressao -> Termo .)
    DO              reduce using rule 15 (Expressao -> Termo .)
    DOT             reduce using rule 15 (Expressao -> Termo .)
    DOTSTRING       reduce using rule 15 (Expressao -> Termo .)
    COMMENT_START   reduce using rule 15 (Expressao -> Termo .)
    ID              reduce using rule 15 (Expressao -> Termo .)
    VARIABLE        reduce using rule 15 (Expressao -> Termo .)
    =               reduce using rule 15 (Expressao -> Termo .)
    <               reduce using rule 15 (Expressao -> Termo .)
    >               reduce using rule 15 (Expressao -> Termo .)
    INFEQ           reduce using rule 15 (Expressao -> Termo .)
    SUPEQ           reduce using rule 15 (Expressao -> Termo .)
    NUMBER          reduce using rule 15 (Expressao -> Termo .)
    $end            reduce using rule 15 (Expressao -> Termo .)
    COMMENT_END     reduce using rule 15 (Expressao -> Termo .)
    THEN            reduce using rule 15 (Expressao -> Termo .)
    ELSE            reduce using rule 15 (Expressao -> Termo .)
    LOOP            reduce using rule 15 (Expressao -> Termo .)


state 11

    (18) Imprime -> DOT .

    DOT             reduce using rule 18 (Imprime -> DOT .)
    DOTSTRING       reduce using rule 18 (Imprime -> DOT .)
    COMMENT_START   reduce using rule 18 (Imprime -> DOT .)
    ID              reduce using rule 18 (Imprime -> DOT .)
    VARIABLE        reduce using rule 18 (Imprime -> DOT .)
    =               reduce using rule 18 (Imprime -> DOT .)
    <               reduce using rule 18 (Imprime -> DOT .)
    >               reduce using rule 18 (Imprime -> DOT .)
    INFEQ           reduce using rule 18 (Imprime -> DOT .)
    SUPEQ           reduce using rule 18 (Imprime -> DOT .)
    NUMBER          reduce using rule 18 (Imprime -> DOT .)
    $end            reduce using rule 18 (Imprime -> DOT .)
    COMMENT_END     reduce using rule 18 (Imprime -> DOT .)
    THEN            reduce using rule 18 (Imprime -> DOT .)
    ELSE            reduce using rule 18 (Imprime -> DOT .)
    LOOP            reduce using rule 18 (Imprime -> DOT .)


state 12

    (19) Imprime -> DOTSTRING .

    DOT             reduce using rule 19 (Imprime -> DOTSTRING .)
    DOTSTRING       reduce using rule 19 (Imprime -> DOTSTRING .)
    COMMENT_START   reduce using rule 19 (Imprime -> DOTSTRING .)
    ID              reduce using rule 19 (Imprime -> DOTSTRING .)
    VARIABLE        reduce using rule 19 (Imprime -> DOTSTRING .)
    =               reduce using rule 19 (Imprime -> DOTSTRING .)
    <               reduce using rule 19 (Imprime -> DOTSTRING .)
    >               reduce using rule 19 (Imprime -> DOTSTRING .)
    INFEQ           reduce using rule 19 (Imprime -> DOTSTRING .)
    SUPEQ           reduce using rule 19 (Imprime -> DOTSTRING .)
    NUMBER          reduce using rule 19 (Imprime -> DOTSTRING .)
    $end            reduce using rule 19 (Imprime -> DOTSTRING .)
    COMMENT_END     reduce using rule 19 (Imprime -> DOTSTRING .)
    THEN            reduce using rule 19 (Imprime -> DOTSTRING .)
    ELSE            reduce using rule 19 (Imprime -> DOTSTRING .)
    LOOP            reduce using rule 19 (Imprime -> DOTSTRING .)


state 13

    (20) Comment -> COMMENT_START . Comandos COMMENT_END
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    COMMENT_END     reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 30

state 14

    (21) Store -> ID . !
    (22) Unstore -> ID . @

    !               shift and go to state 31
    @               shift and go to state 32


state 15

    (23) Variavel -> VARIABLE . ID

    ID              shift and go to state 33


state 16

    (24) Conditional -> = . IF Comandos THEN
    (29) Conditional -> = . IF Comandos ELSE Comandos THEN

    IF              shift and go to state 34


state 17

    (25) Conditional -> < . IF Comandos THEN
    (30) Conditional -> < . IF Comandos ELSE Comandos THEN

    IF              shift and go to state 35


state 18

    (26) Conditional -> > . IF Comandos THEN
    (31) Conditional -> > . IF Comandos ELSE Comandos THEN

    IF              shift and go to state 36


state 19

    (27) Conditional -> INFEQ . IF Comandos THEN
    (32) Conditional -> INFEQ . IF Comandos ELSE Comandos THEN

    IF              shift and go to state 37


state 20

    (28) Conditional -> SUPEQ . IF Comandos THEN
    (33) Conditional -> SUPEQ . IF Comandos ELSE Comandos THEN

    IF              shift and go to state 38


state 21

    (16) Termo -> NUMBER .

    +               reduce using rule 16 (Termo -> NUMBER .)
    -               reduce using rule 16 (Termo -> NUMBER .)
    *               reduce using rule 16 (Termo -> NUMBER .)
    /               reduce using rule 16 (Termo -> NUMBER .)
    %               reduce using rule 16 (Termo -> NUMBER .)
    IF              reduce using rule 16 (Termo -> NUMBER .)
    DO              reduce using rule 16 (Termo -> NUMBER .)
    DOT             reduce using rule 16 (Termo -> NUMBER .)
    DOTSTRING       reduce using rule 16 (Termo -> NUMBER .)
    COMMENT_START   reduce using rule 16 (Termo -> NUMBER .)
    ID              reduce using rule 16 (Termo -> NUMBER .)
    VARIABLE        reduce using rule 16 (Termo -> NUMBER .)
    =               reduce using rule 16 (Termo -> NUMBER .)
    <               reduce using rule 16 (Termo -> NUMBER .)
    >               reduce using rule 16 (Termo -> NUMBER .)
    INFEQ           reduce using rule 16 (Termo -> NUMBER .)
    SUPEQ           reduce using rule 16 (Termo -> NUMBER .)
    NUMBER          reduce using rule 16 (Termo -> NUMBER .)
    $end            reduce using rule 16 (Termo -> NUMBER .)
    COMMENT_END     reduce using rule 16 (Termo -> NUMBER .)
    THEN            reduce using rule 16 (Termo -> NUMBER .)
    ELSE            reduce using rule 16 (Termo -> NUMBER .)
    LOOP            reduce using rule 16 (Termo -> NUMBER .)


state 22

    (17) Termo -> Unstore .

    +               reduce using rule 17 (Termo -> Unstore .)
    -               reduce using rule 17 (Termo -> Unstore .)
    *               reduce using rule 17 (Termo -> Unstore .)
    /               reduce using rule 17 (Termo -> Unstore .)
    %               reduce using rule 17 (Termo -> Unstore .)
    IF              reduce using rule 17 (Termo -> Unstore .)
    DO              reduce using rule 17 (Termo -> Unstore .)
    DOT             reduce using rule 17 (Termo -> Unstore .)
    DOTSTRING       reduce using rule 17 (Termo -> Unstore .)
    COMMENT_START   reduce using rule 17 (Termo -> Unstore .)
    ID              reduce using rule 17 (Termo -> Unstore .)
    VARIABLE        reduce using rule 17 (Termo -> Unstore .)
    =               reduce using rule 17 (Termo -> Unstore .)
    <               reduce using rule 17 (Termo -> Unstore .)
    >               reduce using rule 17 (Termo -> Unstore .)
    INFEQ           reduce using rule 17 (Termo -> Unstore .)
    SUPEQ           reduce using rule 17 (Termo -> Unstore .)
    NUMBER          reduce using rule 17 (Termo -> Unstore .)
    $end            reduce using rule 17 (Termo -> Unstore .)
    COMMENT_END     reduce using rule 17 (Termo -> Unstore .)
    THEN            reduce using rule 17 (Termo -> Unstore .)
    ELSE            reduce using rule 17 (Termo -> Unstore .)
    LOOP            reduce using rule 17 (Termo -> Unstore .)


state 23

    (10) Expressao -> Expressao + .

    +               reduce using rule 10 (Expressao -> Expressao + .)
    -               reduce using rule 10 (Expressao -> Expressao + .)
    *               reduce using rule 10 (Expressao -> Expressao + .)
    /               reduce using rule 10 (Expressao -> Expressao + .)
    %               reduce using rule 10 (Expressao -> Expressao + .)
    IF              reduce using rule 10 (Expressao -> Expressao + .)
    DO              reduce using rule 10 (Expressao -> Expressao + .)
    DOT             reduce using rule 10 (Expressao -> Expressao + .)
    DOTSTRING       reduce using rule 10 (Expressao -> Expressao + .)
    COMMENT_START   reduce using rule 10 (Expressao -> Expressao + .)
    ID              reduce using rule 10 (Expressao -> Expressao + .)
    VARIABLE        reduce using rule 10 (Expressao -> Expressao + .)
    =               reduce using rule 10 (Expressao -> Expressao + .)
    <               reduce using rule 10 (Expressao -> Expressao + .)
    >               reduce using rule 10 (Expressao -> Expressao + .)
    INFEQ           reduce using rule 10 (Expressao -> Expressao + .)
    SUPEQ           reduce using rule 10 (Expressao -> Expressao + .)
    NUMBER          reduce using rule 10 (Expressao -> Expressao + .)
    $end            reduce using rule 10 (Expressao -> Expressao + .)
    COMMENT_END     reduce using rule 10 (Expressao -> Expressao + .)
    THEN            reduce using rule 10 (Expressao -> Expressao + .)
    ELSE            reduce using rule 10 (Expressao -> Expressao + .)
    LOOP            reduce using rule 10 (Expressao -> Expressao + .)


state 24

    (11) Expressao -> Expressao - .

    +               reduce using rule 11 (Expressao -> Expressao - .)
    -               reduce using rule 11 (Expressao -> Expressao - .)
    *               reduce using rule 11 (Expressao -> Expressao - .)
    /               reduce using rule 11 (Expressao -> Expressao - .)
    %               reduce using rule 11 (Expressao -> Expressao - .)
    IF              reduce using rule 11 (Expressao -> Expressao - .)
    DO              reduce using rule 11 (Expressao -> Expressao - .)
    DOT             reduce using rule 11 (Expressao -> Expressao - .)
    DOTSTRING       reduce using rule 11 (Expressao -> Expressao - .)
    COMMENT_START   reduce using rule 11 (Expressao -> Expressao - .)
    ID              reduce using rule 11 (Expressao -> Expressao - .)
    VARIABLE        reduce using rule 11 (Expressao -> Expressao - .)
    =               reduce using rule 11 (Expressao -> Expressao - .)
    <               reduce using rule 11 (Expressao -> Expressao - .)
    >               reduce using rule 11 (Expressao -> Expressao - .)
    INFEQ           reduce using rule 11 (Expressao -> Expressao - .)
    SUPEQ           reduce using rule 11 (Expressao -> Expressao - .)
    NUMBER          reduce using rule 11 (Expressao -> Expressao - .)
    $end            reduce using rule 11 (Expressao -> Expressao - .)
    COMMENT_END     reduce using rule 11 (Expressao -> Expressao - .)
    THEN            reduce using rule 11 (Expressao -> Expressao - .)
    ELSE            reduce using rule 11 (Expressao -> Expressao - .)
    LOOP            reduce using rule 11 (Expressao -> Expressao - .)


state 25

    (12) Expressao -> Expressao * .

    +               reduce using rule 12 (Expressao -> Expressao * .)
    -               reduce using rule 12 (Expressao -> Expressao * .)
    *               reduce using rule 12 (Expressao -> Expressao * .)
    /               reduce using rule 12 (Expressao -> Expressao * .)
    %               reduce using rule 12 (Expressao -> Expressao * .)
    IF              reduce using rule 12 (Expressao -> Expressao * .)
    DO              reduce using rule 12 (Expressao -> Expressao * .)
    DOT             reduce using rule 12 (Expressao -> Expressao * .)
    DOTSTRING       reduce using rule 12 (Expressao -> Expressao * .)
    COMMENT_START   reduce using rule 12 (Expressao -> Expressao * .)
    ID              reduce using rule 12 (Expressao -> Expressao * .)
    VARIABLE        reduce using rule 12 (Expressao -> Expressao * .)
    =               reduce using rule 12 (Expressao -> Expressao * .)
    <               reduce using rule 12 (Expressao -> Expressao * .)
    >               reduce using rule 12 (Expressao -> Expressao * .)
    INFEQ           reduce using rule 12 (Expressao -> Expressao * .)
    SUPEQ           reduce using rule 12 (Expressao -> Expressao * .)
    NUMBER          reduce using rule 12 (Expressao -> Expressao * .)
    $end            reduce using rule 12 (Expressao -> Expressao * .)
    COMMENT_END     reduce using rule 12 (Expressao -> Expressao * .)
    THEN            reduce using rule 12 (Expressao -> Expressao * .)
    ELSE            reduce using rule 12 (Expressao -> Expressao * .)
    LOOP            reduce using rule 12 (Expressao -> Expressao * .)


state 26

    (13) Expressao -> Expressao / .

    +               reduce using rule 13 (Expressao -> Expressao / .)
    -               reduce using rule 13 (Expressao -> Expressao / .)
    *               reduce using rule 13 (Expressao -> Expressao / .)
    /               reduce using rule 13 (Expressao -> Expressao / .)
    %               reduce using rule 13 (Expressao -> Expressao / .)
    IF              reduce using rule 13 (Expressao -> Expressao / .)
    DO              reduce using rule 13 (Expressao -> Expressao / .)
    DOT             reduce using rule 13 (Expressao -> Expressao / .)
    DOTSTRING       reduce using rule 13 (Expressao -> Expressao / .)
    COMMENT_START   reduce using rule 13 (Expressao -> Expressao / .)
    ID              reduce using rule 13 (Expressao -> Expressao / .)
    VARIABLE        reduce using rule 13 (Expressao -> Expressao / .)
    =               reduce using rule 13 (Expressao -> Expressao / .)
    <               reduce using rule 13 (Expressao -> Expressao / .)
    >               reduce using rule 13 (Expressao -> Expressao / .)
    INFEQ           reduce using rule 13 (Expressao -> Expressao / .)
    SUPEQ           reduce using rule 13 (Expressao -> Expressao / .)
    NUMBER          reduce using rule 13 (Expressao -> Expressao / .)
    $end            reduce using rule 13 (Expressao -> Expressao / .)
    COMMENT_END     reduce using rule 13 (Expressao -> Expressao / .)
    THEN            reduce using rule 13 (Expressao -> Expressao / .)
    ELSE            reduce using rule 13 (Expressao -> Expressao / .)
    LOOP            reduce using rule 13 (Expressao -> Expressao / .)


state 27

    (14) Expressao -> Expressao % .

    +               reduce using rule 14 (Expressao -> Expressao % .)
    -               reduce using rule 14 (Expressao -> Expressao % .)
    *               reduce using rule 14 (Expressao -> Expressao % .)
    /               reduce using rule 14 (Expressao -> Expressao % .)
    %               reduce using rule 14 (Expressao -> Expressao % .)
    IF              reduce using rule 14 (Expressao -> Expressao % .)
    DO              reduce using rule 14 (Expressao -> Expressao % .)
    DOT             reduce using rule 14 (Expressao -> Expressao % .)
    DOTSTRING       reduce using rule 14 (Expressao -> Expressao % .)
    COMMENT_START   reduce using rule 14 (Expressao -> Expressao % .)
    ID              reduce using rule 14 (Expressao -> Expressao % .)
    VARIABLE        reduce using rule 14 (Expressao -> Expressao % .)
    =               reduce using rule 14 (Expressao -> Expressao % .)
    <               reduce using rule 14 (Expressao -> Expressao % .)
    >               reduce using rule 14 (Expressao -> Expressao % .)
    INFEQ           reduce using rule 14 (Expressao -> Expressao % .)
    SUPEQ           reduce using rule 14 (Expressao -> Expressao % .)
    NUMBER          reduce using rule 14 (Expressao -> Expressao % .)
    $end            reduce using rule 14 (Expressao -> Expressao % .)
    COMMENT_END     reduce using rule 14 (Expressao -> Expressao % .)
    THEN            reduce using rule 14 (Expressao -> Expressao % .)
    ELSE            reduce using rule 14 (Expressao -> Expressao % .)
    LOOP            reduce using rule 14 (Expressao -> Expressao % .)


state 28

    (34) Conditional -> Expressao IF . Comandos THEN
    (35) Conditional -> Expressao IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 39

state 29

    (36) Loop -> Expressao DO . Comandos LOOP
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    LOOP            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 40

state 30

    (20) Comment -> COMMENT_START Comandos . COMMENT_END
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    COMMENT_END     shift and go to state 41
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 31

    (21) Store -> ID ! .

    DOT             reduce using rule 21 (Store -> ID ! .)
    DOTSTRING       reduce using rule 21 (Store -> ID ! .)
    COMMENT_START   reduce using rule 21 (Store -> ID ! .)
    ID              reduce using rule 21 (Store -> ID ! .)
    VARIABLE        reduce using rule 21 (Store -> ID ! .)
    =               reduce using rule 21 (Store -> ID ! .)
    <               reduce using rule 21 (Store -> ID ! .)
    >               reduce using rule 21 (Store -> ID ! .)
    INFEQ           reduce using rule 21 (Store -> ID ! .)
    SUPEQ           reduce using rule 21 (Store -> ID ! .)
    NUMBER          reduce using rule 21 (Store -> ID ! .)
    $end            reduce using rule 21 (Store -> ID ! .)
    COMMENT_END     reduce using rule 21 (Store -> ID ! .)
    THEN            reduce using rule 21 (Store -> ID ! .)
    ELSE            reduce using rule 21 (Store -> ID ! .)
    LOOP            reduce using rule 21 (Store -> ID ! .)


state 32

    (22) Unstore -> ID @ .

    +               reduce using rule 22 (Unstore -> ID @ .)
    -               reduce using rule 22 (Unstore -> ID @ .)
    *               reduce using rule 22 (Unstore -> ID @ .)
    /               reduce using rule 22 (Unstore -> ID @ .)
    %               reduce using rule 22 (Unstore -> ID @ .)
    IF              reduce using rule 22 (Unstore -> ID @ .)
    DO              reduce using rule 22 (Unstore -> ID @ .)
    DOT             reduce using rule 22 (Unstore -> ID @ .)
    DOTSTRING       reduce using rule 22 (Unstore -> ID @ .)
    COMMENT_START   reduce using rule 22 (Unstore -> ID @ .)
    ID              reduce using rule 22 (Unstore -> ID @ .)
    VARIABLE        reduce using rule 22 (Unstore -> ID @ .)
    =               reduce using rule 22 (Unstore -> ID @ .)
    <               reduce using rule 22 (Unstore -> ID @ .)
    >               reduce using rule 22 (Unstore -> ID @ .)
    INFEQ           reduce using rule 22 (Unstore -> ID @ .)
    SUPEQ           reduce using rule 22 (Unstore -> ID @ .)
    NUMBER          reduce using rule 22 (Unstore -> ID @ .)
    $end            reduce using rule 22 (Unstore -> ID @ .)
    COMMENT_END     reduce using rule 22 (Unstore -> ID @ .)
    THEN            reduce using rule 22 (Unstore -> ID @ .)
    ELSE            reduce using rule 22 (Unstore -> ID @ .)
    LOOP            reduce using rule 22 (Unstore -> ID @ .)


state 33

    (23) Variavel -> VARIABLE ID .

    DOT             reduce using rule 23 (Variavel -> VARIABLE ID .)
    DOTSTRING       reduce using rule 23 (Variavel -> VARIABLE ID .)
    COMMENT_START   reduce using rule 23 (Variavel -> VARIABLE ID .)
    ID              reduce using rule 23 (Variavel -> VARIABLE ID .)
    VARIABLE        reduce using rule 23 (Variavel -> VARIABLE ID .)
    =               reduce using rule 23 (Variavel -> VARIABLE ID .)
    <               reduce using rule 23 (Variavel -> VARIABLE ID .)
    >               reduce using rule 23 (Variavel -> VARIABLE ID .)
    INFEQ           reduce using rule 23 (Variavel -> VARIABLE ID .)
    SUPEQ           reduce using rule 23 (Variavel -> VARIABLE ID .)
    NUMBER          reduce using rule 23 (Variavel -> VARIABLE ID .)
    $end            reduce using rule 23 (Variavel -> VARIABLE ID .)
    COMMENT_END     reduce using rule 23 (Variavel -> VARIABLE ID .)
    THEN            reduce using rule 23 (Variavel -> VARIABLE ID .)
    ELSE            reduce using rule 23 (Variavel -> VARIABLE ID .)
    LOOP            reduce using rule 23 (Variavel -> VARIABLE ID .)


state 34

    (24) Conditional -> = IF . Comandos THEN
    (29) Conditional -> = IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 42

state 35

    (25) Conditional -> < IF . Comandos THEN
    (30) Conditional -> < IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 43

state 36

    (26) Conditional -> > IF . Comandos THEN
    (31) Conditional -> > IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 44

state 37

    (27) Conditional -> INFEQ IF . Comandos THEN
    (32) Conditional -> INFEQ IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 45

state 38

    (28) Conditional -> SUPEQ IF . Comandos THEN
    (33) Conditional -> SUPEQ IF . Comandos ELSE Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    ELSE            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 46

state 39

    (34) Conditional -> Expressao IF Comandos . THEN
    (35) Conditional -> Expressao IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 47
    ELSE            shift and go to state 48
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Expressao                      shift and go to state 3
    Comando                        shift and go to state 2
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 40

    (36) Loop -> Expressao DO Comandos . LOOP
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    LOOP            shift and go to state 49
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Expressao                      shift and go to state 3
    Comando                        shift and go to state 2
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 41

    (20) Comment -> COMMENT_START Comandos COMMENT_END .

    DOT             reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    DOTSTRING       reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    COMMENT_START   reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    ID              reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    VARIABLE        reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    =               reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    <               reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    >               reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    INFEQ           reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    SUPEQ           reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    NUMBER          reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    $end            reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    COMMENT_END     reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    THEN            reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    ELSE            reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)
    LOOP            reduce using rule 20 (Comment -> COMMENT_START Comandos COMMENT_END .)


state 42

    (24) Conditional -> = IF Comandos . THEN
    (29) Conditional -> = IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 50
    ELSE            shift and go to state 51
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 43

    (25) Conditional -> < IF Comandos . THEN
    (30) Conditional -> < IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 52
    ELSE            shift and go to state 53
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 44

    (26) Conditional -> > IF Comandos . THEN
    (31) Conditional -> > IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 54
    ELSE            shift and go to state 55
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 45

    (27) Conditional -> INFEQ IF Comandos . THEN
    (32) Conditional -> INFEQ IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 56
    ELSE            shift and go to state 57
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 46

    (28) Conditional -> SUPEQ IF Comandos . THEN
    (33) Conditional -> SUPEQ IF Comandos . ELSE Comandos THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 58
    ELSE            shift and go to state 59
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 47

    (34) Conditional -> Expressao IF Comandos THEN .

    DOT             reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    DOTSTRING       reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    COMMENT_START   reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    ID              reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    VARIABLE        reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    =               reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    <               reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    >               reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    INFEQ           reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    SUPEQ           reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    NUMBER          reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    $end            reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    COMMENT_END     reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    THEN            reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    ELSE            reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)
    LOOP            reduce using rule 34 (Conditional -> Expressao IF Comandos THEN .)


state 48

    (35) Conditional -> Expressao IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 60

state 49

    (36) Loop -> Expressao DO Comandos LOOP .

    DOT             reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    DOTSTRING       reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    COMMENT_START   reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    ID              reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    VARIABLE        reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    =               reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    <               reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    >               reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    INFEQ           reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    SUPEQ           reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    NUMBER          reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    $end            reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    COMMENT_END     reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    THEN            reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    ELSE            reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)
    LOOP            reduce using rule 36 (Loop -> Expressao DO Comandos LOOP .)


state 50

    (24) Conditional -> = IF Comandos THEN .

    DOT             reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    DOTSTRING       reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    COMMENT_START   reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    ID              reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    VARIABLE        reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    =               reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    <               reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    >               reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    INFEQ           reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    SUPEQ           reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    NUMBER          reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    $end            reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    COMMENT_END     reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    THEN            reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    ELSE            reduce using rule 24 (Conditional -> = IF Comandos THEN .)
    LOOP            reduce using rule 24 (Conditional -> = IF Comandos THEN .)


state 51

    (29) Conditional -> = IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 61

state 52

    (25) Conditional -> < IF Comandos THEN .

    DOT             reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    DOTSTRING       reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    COMMENT_START   reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    ID              reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    VARIABLE        reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    =               reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    <               reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    >               reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    INFEQ           reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    SUPEQ           reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    NUMBER          reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    $end            reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    COMMENT_END     reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    THEN            reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    ELSE            reduce using rule 25 (Conditional -> < IF Comandos THEN .)
    LOOP            reduce using rule 25 (Conditional -> < IF Comandos THEN .)


state 53

    (30) Conditional -> < IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 62

state 54

    (26) Conditional -> > IF Comandos THEN .

    DOT             reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    DOTSTRING       reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    COMMENT_START   reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    ID              reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    VARIABLE        reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    =               reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    <               reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    >               reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    INFEQ           reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    SUPEQ           reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    NUMBER          reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    $end            reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    COMMENT_END     reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    THEN            reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    ELSE            reduce using rule 26 (Conditional -> > IF Comandos THEN .)
    LOOP            reduce using rule 26 (Conditional -> > IF Comandos THEN .)


state 55

    (31) Conditional -> > IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 63

state 56

    (27) Conditional -> INFEQ IF Comandos THEN .

    DOT             reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    DOTSTRING       reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    COMMENT_START   reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    ID              reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    VARIABLE        reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    =               reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    <               reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    >               reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    INFEQ           reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    SUPEQ           reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    NUMBER          reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    $end            reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    COMMENT_END     reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    THEN            reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    ELSE            reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)
    LOOP            reduce using rule 27 (Conditional -> INFEQ IF Comandos THEN .)


state 57

    (32) Conditional -> INFEQ IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 64

state 58

    (28) Conditional -> SUPEQ IF Comandos THEN .

    DOT             reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    DOTSTRING       reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    COMMENT_START   reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    ID              reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    VARIABLE        reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    =               reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    <               reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    >               reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    INFEQ           reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    SUPEQ           reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    NUMBER          reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    $end            reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    COMMENT_END     reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    THEN            reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    ELSE            reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)
    LOOP            reduce using rule 28 (Conditional -> SUPEQ IF Comandos THEN .)


state 59

    (33) Conditional -> SUPEQ IF Comandos ELSE . Comandos THEN
    (1) Comandos -> . Comandos Comando
    (2) Comandos -> .

    THEN            reduce using rule 2 (Comandos -> .)
    DOT             reduce using rule 2 (Comandos -> .)
    DOTSTRING       reduce using rule 2 (Comandos -> .)
    COMMENT_START   reduce using rule 2 (Comandos -> .)
    ID              reduce using rule 2 (Comandos -> .)
    VARIABLE        reduce using rule 2 (Comandos -> .)
    =               reduce using rule 2 (Comandos -> .)
    <               reduce using rule 2 (Comandos -> .)
    >               reduce using rule 2 (Comandos -> .)
    INFEQ           reduce using rule 2 (Comandos -> .)
    SUPEQ           reduce using rule 2 (Comandos -> .)
    NUMBER          reduce using rule 2 (Comandos -> .)

    Comandos                       shift and go to state 65

state 60

    (35) Conditional -> Expressao IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 66
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Expressao                      shift and go to state 3
    Comando                        shift and go to state 2
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 61

    (29) Conditional -> = IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 67
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 62

    (30) Conditional -> < IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 68
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 63

    (31) Conditional -> > IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 69
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 64

    (32) Conditional -> INFEQ IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 70
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 65

    (33) Conditional -> SUPEQ IF Comandos ELSE Comandos . THEN
    (1) Comandos -> Comandos . Comando
    (3) Comando -> . Expressao
    (4) Comando -> . Imprime
    (5) Comando -> . Comment
    (6) Comando -> . Store
    (7) Comando -> . Variavel
    (8) Comando -> . Conditional
    (9) Comando -> . Loop
    (10) Expressao -> . Expressao +
    (11) Expressao -> . Expressao -
    (12) Expressao -> . Expressao *
    (13) Expressao -> . Expressao /
    (14) Expressao -> . Expressao %
    (15) Expressao -> . Termo
    (18) Imprime -> . DOT
    (19) Imprime -> . DOTSTRING
    (20) Comment -> . COMMENT_START Comandos COMMENT_END
    (21) Store -> . ID !
    (23) Variavel -> . VARIABLE ID
    (24) Conditional -> . = IF Comandos THEN
    (25) Conditional -> . < IF Comandos THEN
    (26) Conditional -> . > IF Comandos THEN
    (27) Conditional -> . INFEQ IF Comandos THEN
    (28) Conditional -> . SUPEQ IF Comandos THEN
    (29) Conditional -> . = IF Comandos ELSE Comandos THEN
    (30) Conditional -> . < IF Comandos ELSE Comandos THEN
    (31) Conditional -> . > IF Comandos ELSE Comandos THEN
    (32) Conditional -> . INFEQ IF Comandos ELSE Comandos THEN
    (33) Conditional -> . SUPEQ IF Comandos ELSE Comandos THEN
    (34) Conditional -> . Expressao IF Comandos THEN
    (35) Conditional -> . Expressao IF Comandos ELSE Comandos THEN
    (36) Loop -> . Expressao DO Comandos LOOP
    (16) Termo -> . NUMBER
    (17) Termo -> . Unstore
    (22) Unstore -> . ID @

    THEN            shift and go to state 71
    DOT             shift and go to state 11
    DOTSTRING       shift and go to state 12
    COMMENT_START   shift and go to state 13
    ID              shift and go to state 14
    VARIABLE        shift and go to state 15
    =               shift and go to state 16
    <               shift and go to state 17
    >               shift and go to state 18
    INFEQ           shift and go to state 19
    SUPEQ           shift and go to state 20
    NUMBER          shift and go to state 21

    Comando                        shift and go to state 2
    Expressao                      shift and go to state 3
    Imprime                        shift and go to state 4
    Comment                        shift and go to state 5
    Store                          shift and go to state 6
    Variavel                       shift and go to state 7
    Conditional                    shift and go to state 8
    Loop                           shift and go to state 9
    Termo                          shift and go to state 10
    Unstore                        shift and go to state 22

state 66

    (35) Conditional -> Expressao IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 35 (Conditional -> Expressao IF Comandos ELSE Comandos THEN .)


state 67

    (29) Conditional -> = IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 29 (Conditional -> = IF Comandos ELSE Comandos THEN .)


state 68

    (30) Conditional -> < IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 30 (Conditional -> < IF Comandos ELSE Comandos THEN .)


state 69

    (31) Conditional -> > IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 31 (Conditional -> > IF Comandos ELSE Comandos THEN .)


state 70

    (32) Conditional -> INFEQ IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 32 (Conditional -> INFEQ IF Comandos ELSE Comandos THEN .)


state 71

    (33) Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .

    DOT             reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    DOTSTRING       reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    COMMENT_START   reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    ID              reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    VARIABLE        reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    =               reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    <               reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    >               reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    INFEQ           reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    SUPEQ           reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    NUMBER          reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    $end            reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    COMMENT_END     reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    THEN            reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    ELSE            reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)
    LOOP            reduce using rule 33 (Conditional -> SUPEQ IF Comandos ELSE Comandos THEN .)

